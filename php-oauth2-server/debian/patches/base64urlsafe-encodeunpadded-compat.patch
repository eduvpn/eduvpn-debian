diff --git a/src/LocalSigner.php b/src/LocalSigner.php
index ab83ba0..68595cc 100644
--- a/src/LocalSigner.php
+++ b/src/LocalSigner.php
@@ -70,16 +70,16 @@ class LocalSigner implements SignerInterface
     {
         // we add a JWT header, but this is just 'informative', it won't be
         // verified at all by the verifier...
-        $jwtHeader = Base64UrlSafe::encodeUnpadded(
+        $jwtHeader = \rtrim(Base64UrlSafe::encode(
             Json::encode(
                 [
                     'alg' => 'HS256',
                     'typ' => 'JWT',
                 ]
             )
-        );
-        $jwtPayload = Base64UrlSafe::encodeUnpadded(Json::encode($codeTokenInfo));
-        $jwtSignature = Base64UrlSafe::encodeUnpadded($this->__sign($jwtHeader.'.'.$jwtPayload));
+        ), '=');
+        $jwtPayload = \rtrim(Base64UrlSafe::encode(Json::encode($codeTokenInfo)), '=');
+        $jwtSignature = \rtrim(Base64UrlSafe::encode($this->__sign($jwtHeader.'.'.$jwtPayload)), '=');
 
         return $jwtHeader.'.'.$jwtPayload.'.'.$jwtSignature;
     }
@@ -99,7 +99,7 @@ class LocalSigner implements SignerInterface
 
         // we don't care at about the JWT header content, so we ignore it and
         // only use it because it is part of the signature...
-        $jwtSignature = Base64UrlSafe::encodeUnpadded($this->__sign($jwtParts[0].'.'.$jwtParts[1]));
+        $jwtSignature = \rtrim(Base64UrlSafe::encode($this->__sign($jwtParts[0].'.'.$jwtParts[1])), '=');
         if (false === \hash_equals($jwtSignature, $jwtParts[2])) {
             return false;
         }
diff --git a/src/OAuthServer.php b/src/OAuthServer.php
index ff297e1..1c3327f 100644
--- a/src/OAuthServer.php
+++ b/src/OAuthServer.php
@@ -545,12 +545,15 @@ class OAuthServer
         // addition now their code verifier is checked as well...
         $strCmp = \hash_equals(
             $authorizationCodeInfo['code_challenge'],
-            Base64UrlSafe::encodeUnpadded(
-                \hash(
-                    'sha256',
-                    $postData['code_verifier'],
-                    true
-                )
+            \rtrim(
+                Base64UrlSafe::encode(
+                    \hash(
+                        'sha256',
+                        $postData['code_verifier'],
+                        true
+                    )
+                ),
+                '='
             )
         );
 
diff --git a/tests/BearerValidatorTest.php b/tests/BearerValidatorTest.php
index b8a7633..70b4a64 100644
--- a/tests/BearerValidatorTest.php
+++ b/tests/BearerValidatorTest.php
@@ -75,7 +75,7 @@ class BearerValidatorTest extends TestCase
     {
         $this->storage->storeAuthorization('foo', 'code-client', 'config', 'random_1');
 
-        $providedAccessToken = Base64UrlSafe::encodeUnpadded(
+        $providedAccessToken = \rtrim(Base64UrlSafe::encode(
             Json::encode(
                 [
                     'v' => OAuthServer::TOKEN_VERSION,
@@ -87,7 +87,7 @@ class BearerValidatorTest extends TestCase
                     'expires_at' => '2016-01-01T01:00:00+00:00',
                 ]
             )
-        );
+        ), '=');
         $accessTokenInfo = $this->validator->validate(\sprintf('Bearer %s', $providedAccessToken));
         $this->assertSame('foo', $accessTokenInfo->getUserId());
         $this->assertSame('config', (string) $accessTokenInfo->getScope());
@@ -99,7 +99,7 @@ class BearerValidatorTest extends TestCase
     public function testInvalidSignature()
     {
         try {
-            $providedAccessToken = Base64UrlSafe::encodeUnpadded(
+            $providedAccessToken = \rtrim(Base64UrlSafe::encode(
                 Json::encode(
                     [
                         'v' => OAuthServer::TOKEN_VERSION,
@@ -111,7 +111,7 @@ class BearerValidatorTest extends TestCase
                         'expires_at' => '2016-01-01T01:00:00+00:00',
                     ]
                 )
-            );
+            ), '=');
 
             $this->storage->storeAuthorization('foo', 'code-client', 'config', 'random_1');
             $this->validator->validate(\sprintf('Bearer %s', $providedAccessToken));
@@ -134,7 +134,7 @@ class BearerValidatorTest extends TestCase
             );
             $this->validator->setDateTime(new DateTime('2016-01-01'));
 
-            $providedAccessToken = Base64UrlSafe::encodeUnpadded(
+            $providedAccessToken = \rtrim(Base64UrlSafe::encode(
                 Json::encode(
                     [
                         'v' => OAuthServer::TOKEN_VERSION,
@@ -146,7 +146,7 @@ class BearerValidatorTest extends TestCase
                         'expires_at' => '2016-01-01T01:00:00+00:00',
                     ]
                 )
-            );
+            ), '=');
 
             $this->validator->validate(\sprintf('Bearer %s', $providedAccessToken));
             $this->fail();
@@ -173,7 +173,7 @@ class BearerValidatorTest extends TestCase
      */
     public function testExpiredToken()
     {
-        $providedAccessToken = Base64UrlSafe::encodeUnpadded(
+        $providedAccessToken = \rtrim(Base64UrlSafe::encode(
             Json::encode(
                 [
                     'v' => OAuthServer::TOKEN_VERSION,
@@ -185,7 +185,7 @@ class BearerValidatorTest extends TestCase
                     'expires_at' => '2015-01-01T01:00:00+00:00',
                 ]
             )
-        );
+        ), '=');
 
         try {
             $this->validator->validate(\sprintf('Bearer %s', $providedAccessToken));
@@ -214,7 +214,7 @@ class BearerValidatorTest extends TestCase
     public function testCodeAsAccessToken()
     {
         try {
-            $providedAccessToken = Base64UrlSafe::encodeUnpadded(
+            $providedAccessToken = \rtrim(Base64UrlSafe::encode(
                 Json::encode(
                     [
                         'v' => OAuthServer::TOKEN_VERSION,
@@ -228,7 +228,7 @@ class BearerValidatorTest extends TestCase
                         'expires_at' => '2016-01-01T00:05:00+00:00',
                     ]
                 )
-            );
+            ), '=');
 
             $this->validator->validate(\sprintf('Bearer %s', $providedAccessToken));
             $this->fail();
diff --git a/tests/OAuthServerTest.php b/tests/OAuthServerTest.php
index 284bc2d..03c91ba 100644
--- a/tests/OAuthServerTest.php
+++ b/tests/OAuthServerTest.php
@@ -161,7 +161,7 @@ class OAuthServerTest extends TestCase
             'foo'
         );
 
-        $expectedCode = Base64UrlSafe::encodeUnpadded(
+        $expectedCode = \rtrim(Base64UrlSafe::encode(
             Json::encode(
                 [
                     'v' => OAuthServer::TOKEN_VERSION,
@@ -175,7 +175,7 @@ class OAuthServerTest extends TestCase
                     'expires_at' => '2016-01-01T00:05:00+00:00',
                 ]
             )
-        );
+        ), '=');
 
         $this->assertInstanceOf('\fkooman\OAuth\Server\Http\Response', $authorizeResponse);
         $this->assertSame(
@@ -209,7 +209,7 @@ class OAuthServerTest extends TestCase
         );
         $this->assertSame(302, $authorizeResponse->getStatusCode());
 
-        $expectedCode = Base64UrlSafe::encodeUnpadded(
+        $expectedCode = \rtrim(Base64UrlSafe::encode(
             Json::encode(
                 [
                     'v' => OAuthServer::TOKEN_VERSION,
@@ -223,7 +223,7 @@ class OAuthServerTest extends TestCase
                     'expires_at' => '2016-01-01T00:05:00+00:00',
                 ]
             )
-        );
+        ), '=');
 
         $this->assertSame(
             [
@@ -256,7 +256,7 @@ class OAuthServerTest extends TestCase
         );
         $this->assertSame(302, $authorizeResponse->getStatusCode());
 
-        $expectedCode = Base64UrlSafe::encodeUnpadded(
+        $expectedCode = \rtrim(Base64UrlSafe::encode(
             Json::encode(
                 [
                     'v' => OAuthServer::TOKEN_VERSION,
@@ -270,7 +270,7 @@ class OAuthServerTest extends TestCase
                     'expires_at' => '2016-01-01T00:05:00+00:00',
                 ]
             )
-        );
+        ), '=');
 
         $this->assertSame(
             [
@@ -286,7 +286,7 @@ class OAuthServerTest extends TestCase
      */
     public function testPostToken()
     {
-        $providedCode = Base64UrlSafe::encodeUnpadded(
+        $providedCode = \rtrim(Base64UrlSafe::encode(
             Json::encode(
                 [
                     'v' => OAuthServer::TOKEN_VERSION,
@@ -300,7 +300,7 @@ class OAuthServerTest extends TestCase
                     'expires_at' => '2016-01-01T00:05:00+00:00',
                 ]
             )
-        );
+        ), '=');
 
         $tokenResponse = $this->server->postToken(
             [
@@ -323,7 +323,7 @@ class OAuthServerTest extends TestCase
             $tokenResponse->getHeaders()
         );
 
-        $expectedAccessToken = Base64UrlSafe::encodeUnpadded(
+        $expectedAccessToken = \rtrim(Base64UrlSafe::encode(
             Json::encode(
                 [
                     'v' => OAuthServer::TOKEN_VERSION,
@@ -335,8 +335,8 @@ class OAuthServerTest extends TestCase
                     'expires_at' => '2016-01-01T01:00:00+00:00',
                 ]
             )
-        );
-        $expectedRefreshToken = Base64UrlSafe::encodeUnpadded(
+        ), '=');
+        $expectedRefreshToken = \rtrim(Base64UrlSafe::encode(
             Json::encode(
                 [
                     'v' => OAuthServer::TOKEN_VERSION,
@@ -347,7 +347,7 @@ class OAuthServerTest extends TestCase
                     'scope' => 'config',
                 ]
             )
-        );
+        ), '=');
 
         $this->assertSame(
             [
@@ -365,7 +365,7 @@ class OAuthServerTest extends TestCase
      */
     public function testPostTokenSecret()
     {
-        $providedCode = Base64UrlSafe::encodeUnpadded(
+        $providedCode = \rtrim(Base64UrlSafe::encode(
             Json::encode(
                 [
                     'v' => OAuthServer::TOKEN_VERSION,
@@ -379,7 +379,7 @@ class OAuthServerTest extends TestCase
                     'expires_at' => '2016-01-01T00:05:00+00:00',
                 ]
             )
-        );
+        ), '=');
 
         $tokenResponse = $this->server->postToken(
             [
@@ -393,7 +393,7 @@ class OAuthServerTest extends TestCase
             '123456'
         );
 
-        $expectedAccessToken = Base64UrlSafe::encodeUnpadded(
+        $expectedAccessToken = \rtrim(Base64UrlSafe::encode(
             Json::encode(
                 [
                     'v' => OAuthServer::TOKEN_VERSION,
@@ -405,8 +405,8 @@ class OAuthServerTest extends TestCase
                     'expires_at' => '2016-01-01T01:00:00+00:00',
                 ]
             )
-        );
-        $expectedRefreshToken = Base64UrlSafe::encodeUnpadded(
+        ), '=');
+        $expectedRefreshToken = \rtrim(Base64UrlSafe::encode(
             Json::encode(
                 [
                     'v' => OAuthServer::TOKEN_VERSION,
@@ -417,7 +417,7 @@ class OAuthServerTest extends TestCase
                     'scope' => 'config',
                 ]
             )
-        );
+        ), '=');
 
         $this->assertSame(
             [
@@ -435,7 +435,7 @@ class OAuthServerTest extends TestCase
      */
     public function testPostTokenMissingCodeVerifier()
     {
-        $providedCode = Base64UrlSafe::encodeUnpadded(
+        $providedCode = \rtrim(Base64UrlSafe::encode(
             Json::encode(
                 [
                     'v' => OAuthServer::TOKEN_VERSION,
@@ -449,7 +449,7 @@ class OAuthServerTest extends TestCase
                     'expires_at' => '2016-01-01T00:05:00+00:00',
                 ]
             )
-        );
+        ), '=');
 
         try {
             $this->storage->storeAuthorization('foo', 'code-client', 'config', 'random_1');
@@ -518,7 +518,7 @@ class OAuthServerTest extends TestCase
         try {
             $this->storage->storeAuthorization('foo', 'code-client', 'config', 'random_1');
 
-            $providedCode = Base64UrlSafe::encodeUnpadded(
+            $providedCode = \rtrim(Base64UrlSafe::encode(
                 Json::encode(
                     [
                         'v' => OAuthServer::TOKEN_VERSION,
@@ -532,7 +532,7 @@ class OAuthServerTest extends TestCase
                         'expires_at' => '2016-01-01T00:05:00+00:00',
                     ]
                 )
-            );
+            ), '=');
 
             $this->server->postToken(
                 [
@@ -557,7 +557,7 @@ class OAuthServerTest extends TestCase
     public function testExpiredCode()
     {
         try {
-            $providedCode = Base64UrlSafe::encodeUnpadded(
+            $providedCode = \rtrim(Base64UrlSafe::encode(
                 Json::encode(
                     [
                         'v' => OAuthServer::TOKEN_VERSION,
@@ -571,7 +571,7 @@ class OAuthServerTest extends TestCase
                         'expires_at' => '2015-01-01T00:05:00+00:00',
                     ]
                 )
-            );
+            ), '=');
 
             $this->server->postToken(
                 [
@@ -598,7 +598,7 @@ class OAuthServerTest extends TestCase
         try {
             $this->storage->storeAuthorization('foo', 'code-client', 'config', 'random_1');
 
-            $providedCode = Base64UrlSafe::encodeUnpadded(
+            $providedCode = \rtrim(Base64UrlSafe::encode(
                 Json::encode(
                     [
                         'v' => OAuthServer::TOKEN_VERSION,
@@ -610,7 +610,7 @@ class OAuthServerTest extends TestCase
                         'expires_at' => '2016-01-01T01:00:00+00:00',
                     ]
                 )
-            );
+            ), '=');
 
             $this->server->postToken(
                 [
@@ -636,7 +636,7 @@ class OAuthServerTest extends TestCase
     {
         $this->storage->storeAuthorization('foo', 'code-client-secret', 'config', 'random_1');
 
-        $providedRefreshToken = Base64UrlSafe::encodeUnpadded(
+        $providedRefreshToken = \rtrim(Base64UrlSafe::encode(
             Json::encode(
                 [
                     'v' => OAuthServer::TOKEN_VERSION,
@@ -647,7 +647,7 @@ class OAuthServerTest extends TestCase
                     'scope' => 'config',
                 ]
             )
-        );
+        ), '=');
 
         $tokenResponse = $this->server->postToken(
             [
@@ -658,7 +658,7 @@ class OAuthServerTest extends TestCase
             '123456'
         );
 
-        $expectedAccessToken = Base64UrlSafe::encodeUnpadded(
+        $expectedAccessToken = \rtrim(Base64UrlSafe::encode(
             Json::encode(
                 [
                     'v' => OAuthServer::TOKEN_VERSION,
@@ -670,7 +670,7 @@ class OAuthServerTest extends TestCase
                     'expires_at' => '2016-01-01T01:00:00+00:00',
                 ]
             )
-        );
+        ), '=');
 
         $this->assertSame(
             [
diff --git a/tests/TestSigner.php b/tests/TestSigner.php
index c69772e..9847b6d 100644
--- a/tests/TestSigner.php
+++ b/tests/TestSigner.php
@@ -41,7 +41,7 @@ class TestSigner implements SignerInterface
      */
     public function sign(array $codeTokenInfo)
     {
-        return Base64UrlSafe::encodeUnpadded(Json::encode($codeTokenInfo));
+        return \rtrim(Base64UrlSafe::encode(Json::encode($codeTokenInfo)), '=');
     }
 
     /**
